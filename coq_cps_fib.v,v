head	1.4;
access;
symbols;
locks
	suhara:1.4; strict;
comment	@# @;


1.4
date	2012.11.02.11.50.48;	author suhara;	state Exp;
branches;
next	1.3;

1.3
date	2012.11.02.11.40.30;	author suhara;	state Exp;
branches;
next	1.2;

1.2
date	2012.11.02.11.22.47;	author suhara;	state Exp;
branches;
next	1.1;

1.1
date	2012.11.02.11.22.16;	author suhara;	state Exp;
branches;
next	;


desc
@@


1.4
log
@*** empty log message ***
@
text
@(**
   CPS
   フィボナッチ数
   2012_11_02

   参考：
   「CPS変換されたフィボナッチ関数の証明をしてみた」
   http://d.hatena.ne.jp/yoshihiro503/20100830#p2
   *)

(** 普通のフィボナッチ関数の定義 *)
Fixpoint fib (n: nat) : nat :=
  match n with
      | 0 => 1
      | 1 => 1
      | S (S m as sm) => fib sm + fib m
  end.
Eval cbv in fib 5.                          (* 8 *)
Eval cbv in fib 6.                          (* 13 *)

(** CPS変換されたフィボナッチ関数の定義 *)
Fixpoint fib_cps (n : nat) (cont : nat -> nat) : nat :=
  match n with
    | 0 =>  cont 1
    | 1 =>  cont 1
    | S ((S m) as sm) =>
      fib_cps sm (fun r1 => fib_cps m (fun r2 => cont (r1 + r2)))
  end.
Eval cbv in fib_cps 5 (fun r => r).
Eval cbv in fib_cps 6 (fun r => r).

(** 補題: fib_cpsの定義の三番目の節を取り出したもので、
   fib_cpsの計算を一段進めるのに使う。 *)
Lemma fib_cps_SSn : forall n f,
  fib_cps (S (S n)) f =
  fib_cps (S n) (fun r1 => fib_cps n (fun r2 => f (r1 + r2))).
Proof.
  reflexivity.
Qed.

(** より強い定理 *)
Theorem eq_fib_fib_cps_aux : forall n,
  (forall f, f (fib n) = fib_cps n f) /\
  (forall g, g (fib (S n)) = fib_cps (S n) g).
Proof.
  induction n.

  (* 0 のとき *)
  split.                                   (* Goalのandを分解する。 *)
  (** andの左 *)
  intro f.
  simpl.
  reflexivity.
  (** andの右 *)
  intro g.
  simpl.
  reflexivity.

  (* Sn のとき *)
  destruct IHn as [Hf Hg].                 (* 前提のandを分解する。 *)
  split.                                   (* Goalのandを分解する。 *)
  (** andの左 *)
  intro f.
  apply Hg.
  (** andの右 *)
  intro g.
  rewrite fib_cps_SSn.
  rewrite <- Hg.
  rewrite <- Hf.
  simpl.
  reflexivity.
Qed.

(** 証明するべきもの *)
Theorem eq_fib_fib_cps : forall n f, f (fib n) = fib_cps n f.
Proof.
  intros n f.
  destruct (eq_fib_fib_cps_aux n).
  apply H.
Qed.
Print eq_fib_fib_cps_aux.
Print eq_fib_fib_cps.

(* END *)
@


1.3
log
@*** empty log message ***
@
text
@d1 1
a1 1
(*
d5 4
d18 1
d22 1
a22 2
Variable A : Type.
Fixpoint fib_cps (n : nat) (cont : nat -> A) : A :=
d29 2
d32 1
a32 7
Fixpoint id (n : nat) (cont : nat -> A) : A :=
  cont n.

Eval cbv in fib_cps 6 id.


(* 補題 fib_cpsの定義の三番目の節を取り出したもので、
d41 1
d74 1
d81 2
@


1.2
log
@*** empty log message ***
@
text
@d3 1
a6 5
(*
   フィボナッチ数
   *)


d14 1
d22 2
a23 3
    | S (S m as sm) =>
      fib_cps sm (fun r1 =>
        fib_cps m (fun r2 => cont (r1 + r2)))
d26 5
a30 3
Lemma fib_SSn : forall n, fib (S (S n)) = fib (S n) + fib n.
  reflexivity.
Qed.
d32 2
d35 3
a37 1
  fib_cps (S (S n)) f = fib_cps (S n) (fun r1 => fib_cps n (fun r2 => f (r1+r2))).
a40 3

(** 等価性の証明 *)

d42 2
a43 1
  (forall f, f (fib n) = fib_cps n f) /\ (forall g, g (fib (S n)) = fib_cps (S n) g).
d46 1
d48 2
a49 1
  split.
d51 1
a51 1
  simpl.                         (* rewrite fib0. rewrite fib_cps0. *)
d53 1
a53 1

d55 1
a55 1
  simpl.                        (*  rewrite fib1. rewrite fib_cps1. *)
d57 2
a58 1
  
d61 1
d64 1
a64 1
  
d69 1
a69 1
  rewrite fib_SSn.
a71 1

@


1.1
log
@Initial revision
@
text
@a69 1
(* そしてこれがメインの定理 *)
d72 3
a74 1
  intros; destruct (eq_fib_fib_cps_aux n); apply H.
a75 1

@
